# publish.yml
name: Publish Package

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.release.target_commitish }}
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          RALLY_APIKEY: ${{ secrets.RALLY_APIKEY }}
          RALLY_INSTANCE: ${{ vars.RALLY_INSTANCE }}
          RALLY_PROJECT_NAME: ${{ vars.RALLY_PROJECT_NAME }}
          STRIP_HTML_TESTCASE_DESCRIPTION: ${{ vars.STRIP_HTML_TESTCASE_DESCRIPTION }}
          LOG_LEVEL: info
        run: npm test

      - name: Get current version from NPM and bump patch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Get current version from NPM registry
          CURRENT_VERSION=$(npm view ibm-rally-context version 2>/dev/null || echo "0.0.0")
          echo "Current version on NPM: $CURRENT_VERSION"

          # Extract major, minor, patch from current version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          echo "New version will be: $NEW_VERSION"

          # Update package.json with new version
          npm version $NEW_VERSION --no-git-tag-version

          # Update package-lock.json
          npm install --package-lock-only

          # Commit and push changes
          git add package.json package-lock.json
          git commit -m "chore(release): bump version to $NEW_VERSION [skip ci]" || echo "No changes to commit"
          git push

      - name: Build package
        run: npm run build

      - name: Configure npm registry for publishing
        if: success()
        uses: actions/setup-node@v6
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Publish to npm registry
        if: success()
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Check if NPM_TOKEN is available
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "NPM_TOKEN secret is not configured. Skipping npm publication."
            echo "To enable npm publishing, add NPM_TOKEN secret to repository settings."
            exit 0
          fi

          # Temporarily modify package.json for npm publication
          node -e "
            const fs = require('fs');
            const p = require('./package.json');
            const orig = p.name;
            p.name = 'ibm-rally-context';
            delete p.publishConfig;
            fs.writeFileSync('package.json', JSON.stringify(p, null, 2) + '\n');
            console.log('renamed', orig, '->', p.name);
            console.log('removed publishConfig for npm publication');
          "

          # Publish to npm
          npm publish --access public

          # Restore original package.json
          git checkout -- package.json

      - name: Configure GitHub Packages registry
        if: success()
        uses: actions/setup-node@v6
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com/
          scope: '@trevsmart'

      - name: Publish to GitHub Packages
        if: success()
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure package.json for GitHub Packages publication
          node -e "
            const fs = require('fs');
            const p = require('./package.json');
            p.name = '@trevsmart/ibm-rally-context';
            p.publishConfig = { registry: 'https://npm.pkg.github.com' };
            fs.writeFileSync('package.json', JSON.stringify(p, null, 2) + '\n');
            console.log('configured package.json for GitHub Packages publication');
            console.log('package name:', p.name);
          "

          npm publish
